In case you wish to compile from source, you will need the following:

Compiler:
	C++11 capable (./configure needs -std=gnu++11 or -std=c++11).
	We use clang for development.

Libraries:
	Boost 1.48 or above.
	ZMQ 3.2 or above.
	Log4CXX 0.10 or above.
	libconfig++ 1.3.2 or above.
	Google's Protobufs 2.3.0 or above.
	FastCGI++ 2.0 or above
	Google's CTemplate (2.2 or above).

Optional:
	When compiling in debug mode (./configure --enable-debugging):
	libprofiler (part of ex-Google's perftools)

Some of these are too recent for Debian Stable (squeeze), but can be
obtained from Debian Testing (wheezy):
	# Pull from Testing (wheezy)
	aptitude install -t testing clang libboost1.49-all-dev
	# Pull from Stable (squeeze)
	aptitude install liblog4cxx10-dev libprotobuf-dev libconfig++8-dev

The list, however, is not complete: ctemplate does not have a -dev 
package available in wheezy at the time of writing (only runtime).
As for ZMQ and fastcgi++, they simply don't exist. No problem, we'll
get them from source:

	# CTemplate
	wget http://ctemplate.googlecode.com/files/ctemplate-2.2.tar.gz
	tar xvf ctemplate-2.2.tar.gz
	cd ctemplate-2.2/
	# If you wish to install to /usr/lib instead of /usr/local/lib
	# use: ./configure --prefix=/usr
	./configure && make -j4
	# Install with root
	make install

	# ZMQ
	wget http://download.zeromq.org/zeromq-3.2.0-rc1.tar.gz
	tar xvf zeromq-3.2.0-rc1.tar.gz
	cd zeromq-3.2.0/
	# There is a newline missing in the tar, add it so clang
	# doesn't complain.
	echo "" >> tests/test_monitor.cpp
	# If you wish to install to /usr/lib instead of /usr/local/lib
	# use: ./configure --prefix=/usr
	./configure && make -j4
	# Install with root
	make install
		
	# FastCGI++
	wget http://download.savannah.nongnu.org/releases/fastcgipp/fastcgi++-2.0.tar.bz2
	tar xvf fastcgi++-2.0.tar.bz2
	cd fastcgi++-2.0/
	# If you wish to install to /usr/lib instead of /usr/local/lib
	# use: ./configure --prefix=/usr
	./configure && make -j4
	# Install with root
	make install
